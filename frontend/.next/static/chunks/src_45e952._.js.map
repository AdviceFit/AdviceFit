{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/parv/Desktop/AdviceFit/frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///home/parv/Desktop/AdviceFit/frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///home/parv/Desktop/AdviceFit/frontend/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,8JAAM,UAAU,MAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,qKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///home/parv/Desktop/AdviceFit/frontend/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-[0.8rem] text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message) : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-[0.8rem] font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file:///home/parv/Desktop/AdviceFit/frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nexport type InputProps = React.ComponentProps<\"input\">;\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\n\nInput.displayName = \"Input\";\n\nexport { Input };\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAIA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAGF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 386, "column": 0}, "map": {"version":3,"sources":["file:///home/parv/Desktop/AdviceFit/frontend/src/features/auth/root_page/SignUpPage.root.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport { toast } from \"sonner\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { zodResolver } from \"@hookform/resolvers/zod\"\r\nimport * as z from \"zod\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\"\r\nimport { Input } from \"@/components/ui/input\"\r\n\r\nconst formSchema = z.object({\r\n  gym_name: z.string().min(2).max(50),\r\n  gym_owner_name: z.string().min(2).max(50),\r\n  email: z.string().email(),\r\n  number: z.string().min(10).max(12),\r\n  password: z.string().min(6),\r\n  describe: z.string(),\r\n  state: z.string().min(2).max(50),\r\n  city: z.string().min(2).max(50),\r\n  pincode: z.string().min(6).max(8)\r\n});\r\n\r\nconst SignUpPage = () => {\r\n  const form = useForm<z.infer<typeof formSchema>>({\r\n    resolver: zodResolver(formSchema),\r\n    defaultValues: {\r\n      gym_name: '',\r\n      gym_owner_name: '',\r\n      email: '',\r\n      number: '',\r\n      password: '',\r\n      describe: '',\r\n      state: '',\r\n      city: '',\r\n      pincode: '',\r\n    },\r\n  });\r\n\r\n  async function onSubmit(values: z.infer<typeof formSchema>) {\r\n    const payload = {\r\n      gym_name: values.gym_name,\r\n      gym_owner_name: values.gym_owner_name,\r\n      number: Number(values.number),\r\n      email: values.email,\r\n      describe: values.describe,\r\n      state: values.state,\r\n      city: values.city,\r\n      pincode: Number(values.pincode),\r\n      password: values.password,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/users/signup', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      const data = await response.json();\r\n      toast.success('Signup successful!');\r\n\r\n    } catch (error) {\r\n      console.error('Form submission error:', error);\r\n      toast.error('Failed to submit the form. Please try again.');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8 max-w-3xl mx-auto py-10\">\r\n        <div className=\"grid grid-cols-12 gap-4\">\r\n          <div className=\"col-span-6\">\r\n            <FormField\r\n              control={form.control}\r\n              name=\"gym_name\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Gym Name</FormLabel>\r\n                  <FormControl>\r\n                    <Input placeholder=\"Fit Gym\" type=\"text\" {...field} />\r\n                  </FormControl>\r\n                  <FormDescription>Name of your gym</FormDescription>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n          </div>\r\n          <div className=\"col-span-6\">\r\n            <FormField\r\n              control={form.control}\r\n              name=\"gym_owner_name\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Owner Name</FormLabel>\r\n                  <FormControl>\r\n                    <Input placeholder=\"John Doe\" type=\"text\" {...field} />\r\n                  </FormControl>\r\n                  <FormDescription>Who is the owner</FormDescription>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"grid grid-cols-12 gap-4\">\r\n          <div className=\"col-span-6\">\r\n            <FormField\r\n              control={form.control}\r\n              name=\"email\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Email</FormLabel>\r\n                  <FormControl>\r\n                    <Input placeholder=\"johndoe@example.com\" type=\"email\" {...field} />\r\n                  </FormControl>\r\n                  <FormDescription>Email to contact</FormDescription>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n          </div>\r\n          <div className=\"col-span-6\">\r\n            <FormField\r\n              control={form.control}\r\n              name=\"number\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Phone</FormLabel>\r\n                  <FormControl>\r\n                    <Input\r\n                      placeholder=\"0000000000\"\r\n                      type=\"number\"\r\n                      {...field}\r\n                      onChange={(e) => field.onChange(Number(e.target.value))}\r\n                    />\r\n                  </FormControl>\r\n                  <FormDescription>Your contact number</FormDescription>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n        <FormField\r\n          control={form.control}\r\n          name=\"password\"\r\n          render={({ field }) => (\r\n            <FormItem>\r\n              <FormLabel>Password</FormLabel>\r\n              <FormControl>\r\n                <PasswordInput placeholder=\"\" {...field} />\r\n              </FormControl>\r\n              <FormDescription>Enter your password.</FormDescription>\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n        <FormField\r\n          control={form.control}\r\n          name=\"describe\"\r\n          render={({ field }) => (\r\n            <FormItem>\r\n              <FormLabel>Description</FormLabel>\r\n              <FormControl>\r\n                <Textarea placeholder=\"type here ...\" className=\"resize-none\" {...field} />\r\n              </FormControl>\r\n              <FormDescription>Brief description of your gym.</FormDescription>\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n        <FormField\r\n          control={form.control}\r\n          name=\"country\"\r\n          render={({ field }) => (\r\n            <FormItem>\r\n              <FormLabel>Select Country</FormLabel>\r\n              <FormControl>\r\n                <LocationSelector\r\n                  onCountryChange={(country) => {\r\n                    setCountryName(country?.name || '');\r\n                    form.setValue(field.name, [country?.name || '', stateName || '']);\r\n                  }}\r\n                  onStateChange={(state) => {\r\n                    setStateName(state?.name || '');\r\n                    form.setValue(field.name, [form.getValues(field.name)[0] || '', state?.name || '']);\r\n                  }}\r\n                />\r\n              </FormControl>\r\n              <FormDescription>If your country has states, it will appear after selecting the country.</FormDescription>\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n        <div className=\"grid grid-cols-12 gap-4\">\r\n          <div className=\"col-span-6\">\r\n            <FormField\r\n              control={form.control}\r\n              name=\"city\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>City</FormLabel>\r\n                  <FormControl>\r\n                    <Input placeholder=\"xyz\" type=\"text\" {...field} />\r\n                  </FormControl>\r\n                  <FormDescription>Headquarters</FormDescription>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n          </div>\r\n          <div className=\"col-span-6\">\r\n            <FormField\r\n              control={form.control}\r\n              name=\"pincode\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Pincode</FormLabel>\r\n                  <FormControl>\r\n                    <Input placeholder=\"111111\" type=\"text\" {...field} />\r\n                  </FormControl>\r\n                  <FormDescription>Your Pincode</FormDescription>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Button type=\"submit\">Submit</Button>\r\n      </form>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SignUpPage;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1032, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}